# https://docs.buf.build/ci-cd/github-actions
name: storybook_tests_ci
on:
  pull_request_review:
    types:
      submitted
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled
      # need this as we will skip the test on draft PRs to save cost.
      - converted_to_draft
      - ready_for_review
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true
jobs:
  # The requirement_check step is needed so we can mark the storybook_test as required on repo level.
  # https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
  requirement_check:
    # Run storybook check only for non-draft PRs and post-approval.
    if: ${{ (github.event_name == 'pull_request' && github.event.pull_request.draft == false) || (github.event_name == 'pull_request_review' && github.event.review.state == 'APPROVED') }}
    permissions:
      # for labeler
      pull-requests: write
      contents: read
    # Use ubuntu so it costs less, this step will run on all PRs.
    runs-on: ubuntu-latest
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          # The conditions are `any()` so any of the patterns match will return true.
          filters: |
            storybook:
              - pnpm-lock.yaml
              - typescript/!(tools)/!(internal|debug)/**
              - typescript/!(tools)/*
              - typescript/*
      - uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const hasStorybookChange = '${{ steps.filter.outputs.storybook }}'
            const removeLabel = () => {
              return github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                name: ['storybook:ready'],
              })
            }
            const addLabel = () => {
              return github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: ['storybook:ready'],
              })
            }
            if (!hasStorybookChange) {
              await removeLabel()
              return
            }

            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            })
            const isApproved = reviews.data.some((review) => review.state === 'APPROVED')
            if (isApproved) {
              await addLabel()
            } else {
              await removeLabel()
            }
  storybook_test:
    needs: [requirement_check]
    # Run on master commits or PRs that we want to run storybook tests (avoid running it on `pull_request_review` which will create a separate run)
    if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'storybook:ready') }}
    # https://docs.github.com/en/actions/using-github-hosted-runners/about-larger-runners/running-jobs-on-larger-runners
    runs-on: ubuntu-latest 
    # should finish ~6 min, 10 min max for -large
    # need to increase to 25 min for standard
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            typescript
            data

      - run: |
          echo "will run test"
          exit 1